class MutcBenchmarking;
external classtype;

import Interval: all;
use String: all;

export { Interval, start, end, benchThis, printResult, 
         getInterval, destroyInterval};

objdef MutcBenchmarking TheBenchmarkObject = create_TheBenchmarkObject( );

void start( Interval& interval){
  _start( interval);
}
external void _start( Interval& interval);
#pragma linkname "benchStart"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject

void end( Interval& interval){
  _end( interval);
}
external void _end( Interval& interval);
#pragma linkname "benchEnd"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject

void printResult( Interval& interval){
  _printResult( interval);
}
external void _printResult( Interval& interval);
#pragma linkname "benchPrint"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject

external void printResult( Interval& a,
                           Interval& b);
#pragma linkname "benchPrint2"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c);
#pragma linkname "benchPrint3"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d);
#pragma linkname "benchPrint4"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d,
                           Interval& e);
#pragma linkname "benchPrint5"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d,
                           Interval& e,
                           Interval& f);
#pragma linkname "benchPrint6"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d,
                           Interval& e,
                           Interval& f,
                           Interval& g);
#pragma linkname "benchPrint7"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d,
                           Interval& e,
                           Interval& f,
                           Interval& g,
                           Interval& h);
#pragma linkname "benchPrint8"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject
external void printResult( Interval& a,
                           Interval& b,
                           Interval& c,
                           Interval& d,
                           Interval& e,
                           Interval& f,
                           Interval& g,
                           Interval& h,
                           Interval& i,
                           Interval& j);
#pragma linkname "benchPrint9"
#pragma linkobj "src/bench.o"
#pragma effect MutcBenchmarking::TheBenchmarkObject


void benchThis(){
  _benchThis();
}

external void _benchThis( );
#pragma linkobj "src/bench.o"
#pragma linkname "benchThis"
#pragma effect MutcBenchmarking::TheBenchmarkObject

external MutcBenchmarking create_TheBenchmarkObject( );
#pragma linksign [1]
#pragma effect World::TheWorld
#pragma linkobj "src/bench.o"
#pragma linkname "benchCreate"

Interval getInterval( string interval_name, int interval_number){
  return(_getInterval( interval_name, interval_number));
}

external Interval _getInterval( string interval_name, int interval_number);
#pragma effect MutcBenchmarking::TheBenchmarkObject
#pragma linkname "benchGetInterval_si"
#pragma linkobj "src/bench.o"
#pragma linksign [1,2,3]

Interval getInterval( string interval_name){
  return(_getInterval( interval_name));
}

external Interval _getInterval( string interval_name);
#pragma effect MutcBenchmarking::TheBenchmarkObject
#pragma linkname "benchGetInterval_s"
#pragma linkobj "src/bench.o"
#pragma linksign [1,2]
 

Interval getInterval( int interval_number){
  return(_getInterval( interval_number));
}

external Interval _getInterval( int interval_number);
#pragma effect MutcBenchmarking::TheBenchmarkObject
#pragma linkname "benchGetInterval_i"
#pragma linkobj "src/bench.o"
#pragma linksign [1,2]

void destroyInterval( Interval interval){
  _destroyInterval( interval);
  return;
}

external void _destroyInterval( Interval interval);
#pragma effect MutcBenchmarking::TheBenchmarkObject
#pragma linksign [1]
#pragma linkname "benchDestroyInterval"
#pragma linkobj "src/bench.o"
